apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd HH:mm')
    return formattedDate
}
def verCode=14
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.testci"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode verCode
        versionName APP_VERSION
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
    }
    signingConfigs {
        signingConfig {
            if ("true" == IS_JENKINS){
                storeFile file("/Users/andyyeh/Documents/keysotre/CITestKeySotre")
            }
            else {
                storeFile file(STORE_FILE_PATH)
            }
            keyAlias "keyTestCI"
            keyPassword "a87723695"
            storePassword "a87723695"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signingConfig
        }
        debug {

        }
    }
    dexOptions{
        javaMaxHeapSize "2g"
    }
    //product flavors
    productFlavors {
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
    }
    //the general apk and exported file path
    applicationVariants.all {
        variant ->
            variant.outputs.each { output ->
                //新名字
                def newName
                //时间戳
                def timeNow
                //输出文件夹
                def outDirectory
                //是否为Jenkins打包，输出路径不同
                if ("true" == IS_JENKINS) {
                    //Jenkins打包输出到服务器路径
                    timeNow = BUILD_TIME
                    //BUILD_PATH为服务器输出路径
                    outDirectory = "/Users/andyyeh/Documents/apks"
                    //AutoBuildTest-v1.0.1-xiaomi-release.apk
                    newName = 'AutoBuildTest-v' + APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '.apk'
                } else {
                    //本机打包输出在本机路径
                    timeNow = getDate()
                    outDirectory = output.outputFile.getParent()
                    if ('debug'.equals(variant.buildType.name)) {
                        newName = "AutoBuildTest-v${APP_VERSION}-debug.apk"
                    } else {
                        //AutoBuildTest-v1.0.1-xiaomi-release.apk
                        newName = 'AutoBuildTest-v' + APP_VERSION + '-' + variant.productFlavors[0].name + '-' + variant.buildType.name + '.apk'
                    }
                }
                def outputDirPath = new File(outDirectory+'/'+timeNow)
                variant.packageApplicationProvider.get().outputDirectory = outputDirPath

                output.outputFileName = newName
            }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
